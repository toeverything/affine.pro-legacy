name: Build Test Version

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Test scenario tags. If not specify tag, it will use the branch name. nightly-latest for pro.affine.systems."
        required: false
        type: string

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version: [18.x]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2
        with:
          version: "latest"

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: |
          pnpm lint --max-warnings=0
          pnpm format:check

      # - name: Test
      #   run: pnpm test:ci

      - name: Build
        run: pnpm build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./out

  push_to_registry:
    # See https://docs.github.com/en/actions/publishing-packages/publishing-docker-images
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: build

    permissions:
      contents: read
      packages: write

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: toeverything/pro.affine.systems
      IMAGE_TAG: canary-${{ github.sha }}
      # IMAGE_TAG_LATEST: nightly-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: github-pages

      - name: Unarchive
        run: mkdir out && tar xvf artifact.tar -C out

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            ${{ env.IMAGE_TAG }}
            ${{ inputs.tag || github.ref_name }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          file: ./.github/deployment/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
